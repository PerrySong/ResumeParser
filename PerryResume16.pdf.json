{"name":"Song\nPhone","email":"psong4@dons.usfca.edu","phone":"(628) 213-9560","profiles":"https://github.com/PerrySonghttps://github.com/PerrySong/CryptoPortfolio-Nodejshttps://github.com/PerrySong/CandyFmhttps://github.com/PerrySong/AleperyChathttps://github.com/PerrySong/Top-crypto-news-api","education":"University of San Francisco, USA, Master of Computer Science, GPA: 4.0 (Academic Merit Scholarship) Aug. 2017 - Jun. 2020","experience":"Teaching Assistant \" University of San Francisco Aug. 2018 - Dec. 2018\nTeaching assistant for Object-Oriented Programming (Java). Responsibilities include grading assignments and projects, office hours.\nPERSONAL PROJECTS\nCrypto Portfolio (Node.js, React, Redux, PostgreSQL, AWS, Nginx, JWT, Nodemailer.js) https://github.com/PerrySong/CryptoPortfolio-Nodejs\nDesigned and built a web-based cryptocurrency management social app with more than 2500 cryptocurrencies.\nBuilt the backend with complete email verified authentication system by JWT and Nodemailer deployed on AWS EC2.\nImplemented a user-based investment recommendation system using collaborative filtering.\nBuilt the frontend by React and Redux and visualized coin information by D3 using the data from CryptoCompare API.\nCandy FM Web App - (Java, Jetty/Servlets, JUnit, Travis-ci, Java concurrency) https://github.com/PerrySong/CandyFm\nBuilt a Java-based web application with metadata fetched from the Last.fm APIs and processed using the multithreaded approach\n(Java concurrency), 3 times faster than a single thread.\nUsed MVC pattern and Java Jetty/Servlets to build the web app and used Travis-ci and JUnit for testing.\nApplication features include but not limited: recommend similar songs by title, tags, or artist names, authentication, authorization, search\nhistory, popular searches, favorite songs, and partial search.\nEmotion Recognizing Android dating app - (Android, Java, Affectiva, Firebase, Opentok, Affectiva) https://github.com/PerrySong/AleperyChat\nImplemented an online video chat Android app using Opentok and using Affectiva detect and evaluate users' facial expression.\nUsed Firebase for user's facial expression data storage and smoothed the user facial expression value by sliding windows.\nImplemented Collaborative Filtering algorithm to compute user and dating partner's real-time facial synchronization level to assess the\naffections of a chat.\nReal-Time News Web App - (Python, Node.js, MongoDB, RabbitMQ, TF-IDF) https://github.com/PerrySong/Top-crypto-news-api\nImplemented a real-time news scraping data pipeline which has news monitoring, scraping and deduping services.\nUsed RabbitMQ to connect different services, TF-IDF for deduping news, MongoDB for data storage and Node.js for news display.\nRESTful Campground Web App - (Node.js, MongoDB, Bootstrap, HTML/CSS, Heroku, Cloud9) https://hidden-headland-22449.herokuapp.com/\nDesigned a social media web application for users to share campgrounds and deployed this app on Heroku.\nApplied Passport.js for authentication and authorization.\nWrote reusable HTML templates using EJS view engine and styled web pages using Bootstrap.\nSocket Based Message Broker (Java, JUnit, Java concurrency)\nImplemented a Java-based message broker framework by Socket and Java Generic.\nUsed Java concurrency to make user publish messages asynchronously and broker can multi-thread send messages to subscriber.\nPracticed Singleton, Builder, Observer, Publisher/Subscriber, Decorator design patterns and Unit test, Integration test, System test.\nShortest Path Recommender (Java, Java GUI, JUnit, C, MPI)\nImplemented Dijkstra's algorithm for computing the shortest path between major cities in the US, users can interact with the program by\nclicking on any two cities on the map.\nParallelized the computation of the shortest path algorithms using MPI and achieved 2.5 times speed up in one machine.","projects":"Crypto Portfolio (Node.js, React, Redux, PostgreSQL, AWS, Nginx, JWT, Nodemailer.js) https://github.com/PerrySong/CryptoPortfolio-Nodejs\nDesigned and built a web-based cryptocurrency management social app with more than 2500 cryptocurrencies.\nBuilt the backend with complete email verified authentication system by JWT and Nodemailer deployed on AWS EC2.\nImplemented a user-based investment recommendation system using collaborative filtering.\nBuilt the frontend by React and Redux and visualized coin information by D3 using the data from CryptoCompare API.\nCandy FM Web App - (Java, Jetty/Servlets, JUnit, Travis-ci, Java concurrency) https://github.com/PerrySong/CandyFm\nBuilt a Java-based web application with metadata fetched from the Last.fm APIs and processed using the multithreaded approach\n(Java concurrency), 3 times faster than a single thread.\nUsed MVC pattern and Java Jetty/Servlets to build the web app and used Travis-ci and JUnit for testing.\nApplication features include but not limited: recommend similar songs by title, tags, or artist names, authentication, authorization, search\nhistory, popular searches, favorite songs, and partial search.\nEmotion Recognizing Android dating app - (Android, Java, Affectiva, Firebase, Opentok, Affectiva) https://github.com/PerrySong/AleperyChat\nImplemented an online video chat Android app using Opentok and using Affectiva detect and evaluate users' facial expression.\nUsed Firebase for user's facial expression data storage and smoothed the user facial expression value by sliding windows.\nImplemented Collaborative Filtering algorithm to compute user and dating partner's real-time facial synchronization level to assess the\naffections of a chat.\nReal-Time News Web App - (Python, Node.js, MongoDB, RabbitMQ, TF-IDF) https://github.com/PerrySong/Top-crypto-news-api\nImplemented a real-time news scraping data pipeline which has news monitoring, scraping and deduping services.\nUsed RabbitMQ to connect different services, TF-IDF for deduping news, MongoDB for data storage and Node.js for news display.\nRESTful Campground Web App - (Node.js, MongoDB, Bootstrap, HTML/CSS, Heroku, Cloud9) https://hidden-headland-22449.herokuapp.com/\nDesigned a social media web application for users to share campgrounds and deployed this app on Heroku.\nApplied Passport.js for authentication and authorization.\nWrote reusable HTML templates using EJS view engine and styled web pages using Bootstrap.\nSocket Based Message Broker (Java, JUnit, Java concurrency)\nImplemented a Java-based message broker framework by Socket and Java Generic.\nUsed Java concurrency to make user publish messages asynchronously and broker can multi-thread send messages to subscriber.\nPracticed Singleton, Builder, Observer, Publisher/Subscriber, Decorator design patterns and Unit test, Integration test, System test.\nShortest Path Recommender (Java, Java GUI, JUnit, C, MPI)\nImplemented Dijkstra's algorithm for computing the shortest path between major cities in the US, users can interact with the program by\nclicking on any two cities on the map.\nParallelized the computation of the shortest path algorithms using MPI and achieved 2.5 times speed up in one machine."}